group = 'com.keypr.helium'
version = rootProject.version

boolean hasCredentials = hasProperty('binTrayUser') && hasProperty('binTrayKey')
if (hasCredentials) {
  apply plugin: 'com.jfrog.bintray'
  apply plugin: 'maven-publish'
  bintray {
    user = project.binTrayUser
    key = project.binTrayKey

    pkg {
      repo = 'keypr-public'
      name = project.name
      userOrg = 'keypr'
      licenses = ['Apache-2.0']
      vcsUrl = 'https://github.com/Keypr/helium.git'

      version {
        name = project.version
      }
    }

    publications = ['mavenPub']
  }
}

checkstyle {
  configFile = file("$rootDir/config/checkstyle/checkstyle.xml")
  toolVersion = '6.4'
}

repositories {
  jcenter()
}

configurations {
  groovyDocFix
}

dependencies {
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude group: 'org.codehaus.groovy'
  }
  groovyDocFix 'org.fusesource.jansi:jansi:1.11'
}

tasks.all { task ->
  if (task.name.startsWith('compile') && (task.name.endsWith('Java') || task.name.endsWith('Groovy'))) {
    task.configure {
      sourceCompatibility = project.javaVersion
      targetCompatibility = project.javaVersion
    }
  } else if (task.name.startsWith('generatePomFile')) {
    tasks.bintrayUpload.dependsOn task
  }
}

groovydoc {
  exclude 'com/stanfy/helium/**/internal/**'
  classpath += configurations.groovyDocFix
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'javadoc'
  from 'build/docs/groovydoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

if (tasks.findByPath('jacocoTestReport')) {
  jacocoTestReport {
    reports.xml.enabled true
  }
}

artifacts {
  archives groovydocJar
  archives sourcesJar
}

def pomConfig = {
  description 'DSL and Java API for REST API specification'
  url 'https://github.com/keypr/helium'

  scm {
    url 'https://github.com/keypr/helium'
    connection 'scm:git:git@github.com:keypr/helium.git'
    developerConnection 'scm:git:git@github.com:keypr/helium.git'
  }

  licenses {
    license {
      name 'The Apache Software License, Version 2.0'
      url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      distribution 'repo'
    }
  }

  developers {
    developer {
      id 'stanfy'
      name 'Stanfy'
    }
    developer {
      id 'keypr'
      name 'KEYPR'
    }
  }
}

publishing {
  publications {
    mavenPub(MavenPublication) {
      groupId project.group
      artifactId project.name
      version project.version

      from components.java

      artifact(tasks.sourcesJar) {
        classifier 'sources'
      }
      artifact(tasks.groovydocJar) {
        classifier 'javadoc'
      }

      pom.withXml {
        asNode().children().last() + pomConfig
      }
    }
  }
}
