group = 'com.stanfy.helium'
version = rootProject.version

boolean hasCredentials = hasProperty('nexusUsername') && hasProperty('nexusPassword')

repositories {
  mavenCentral()
  google()
  jcenter()
}

configurations {
  groovyDocFix
}

dependencies {
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude group: 'org.codehaus.groovy'
  }
  groovyDocFix 'org.fusesource.jansi:jansi:1.11'
}

groovydoc {
  exclude 'com/stanfy/helium/**/internal/**'
  classpath += configurations.groovyDocFix
}

if (tasks.findByPath('jacocoTestReport')) {
  jacocoTestReport {
    reports.xml.enabled true
  }
}

afterEvaluate {

  ["Groovy", "Java"].each {
    [tasks["compile$it"], tasks["compileTest$it"]].each {
      it.configure {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
      }
    }
  }

  task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from 'build/docs/groovydoc'
  }

  task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
  }

  artifacts {
    archives groovydocJar
    archives sourcesJar
  }

  checkstyle {
    configFile = file("$rootDir/config/checkstyle/checkstyle.xml")
    toolVersion = '6.4'
  }

  signing {
    required !version.contains("SNAPSHOT")
    sign configurations.archives
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          if (hasCredentials) {
            authentication(userName: nexusUsername, password: nexusPassword)
          }
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          if (hasCredentials) {
            authentication(userName: nexusUsername, password: nexusPassword)
          }
        }

        pom.project {
          name 'Helium'
          description 'DSL and Java API for REST API specification'
          url 'https://github.com/stanfy/helium'
          inceptionYear '2013'

          scm {
            url 'https://github.com/stanfy/helium'
            connection 'scm:git:git@github.com:stanfy/helium.git'
            developerConnection 'scm:git:git@github.com:stanfy/helium.git'
          }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'rmazur'
              name 'Roman Mazur'
              email 'rmazur@stanfy.com.ua'
            }
          }
        }

      }
    }
  }
}
