apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'codenarc'
apply plugin: 'jacoco'
apply plugin: 'java-library'

apply from: file("$rootDir/gradle/common.gradle")

dependencies {
  compile project(':helium')
  compile project(':codegen:java:java-entities')
  compile project(':codegen:java:java-constants')
  compile project(':codegen:java:retrofit')
  compile project(':codegen:objc:objc-entities')
  compile project(':codegen:swift:swift-entities')
  compile project(':codegen:json:json-schema')

  compile 'commons-cli:commons-cli:1.2'
}

ext.mainClassName = "com.stanfy.helium.cli.Main"

task noDepsJar(type: Jar, dependsOn: jar) {
  classifier = 'nodeps'
  def deps = files(configurations.runtime, jar.archivePath)
  def depClasses = deps.collect { it.isDirectory() ? it : zipTree(it) }
  from(depClasses) {
    exclude 'META-INF/MANIFEST.MF'
  }
  manifest {
    attributes 'Main-Class': project.mainClassName
  }
}

artifacts {
  archives noDepsJar
}

task execTest(type: Exec, dependsOn: noDepsJar) {
  workingDir project.projectDir
  commandLine 'src/cmd-test/run'
}

task verifyTest(dependsOn: execTest) {
  doLast {
    def file = new File(buildDir, "test-cmd-out")
    assert file.exists()
    assert file.directory

    assert new File(file, "com/test/Entity.java").exists()
  }
}


task swiftGenTest(type:Exec, dependsOn: noDepsJar) {
  def file = new File(buildDir, "swift-gen-test-out")
  // TODO : This is a temporary solution.
  if (!file.exists()) {
    file.mkdir()
  }

  workingDir project.projectDir
  commandLine 'src/cmd-test/swift-gen-run.sh'
}

task verifySwiftGenTest(dependsOn: swiftGenTest) {
  doLast {
    def file = new File(buildDir, "swift-gen-test-out")
    assert file.exists()
    assert file.directory

    assert new File(file, "SwiftAPIClientCore.swift").exists()
    assert new File(file, "SwiftAPIRequestManager.swift").exists()
    assert new File(file, "SwiftAPIServiceExample.swift").exists()

    // TODO: here should be swiftc invocation.
  }
}
