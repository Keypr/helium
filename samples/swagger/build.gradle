import groovy.json.JsonSlurper

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    google()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.stanfy.helium:gradle-plugin:0.9.0-SNAPSHOT'
  }
}

apply plugin: 'helium'

helium {
  specification file('uber.api')
}

task clean(type: Delete) {
  delete buildDir
}

afterEvaluate {
  generateSwaggerSpec {
    endpoints {
      includes 'GET /products'
    }
    types {
      'Product' {
        excludes 'capacity'
      }
    }
  }

  task check(dependsOn: 'generateSwaggerSpec')
  check << {
    def file = new File(generateSwaggerSpec.output, 'Uber_API.json')
    assert file
    def json = new JsonSlurper().parse(file)
    assert json.info.title == 'Uber API'
    assert json.paths.'/products'.keySet() == ['get'] as Set
    assert !json.definitions.'Product'.'properties'.containsKey('capacity')
    assert json.definitions.'Product'.'properties'.containsKey('image')
    assert !json.definitions.'Product'.'required'.contains('capacity')
    assert json.definitions.'Product'.'required'.contains('image')
  }

}
